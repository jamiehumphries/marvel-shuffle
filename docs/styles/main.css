:root {
  --container-padding: 20px;
  --container-max-width: 1600px;

  --button-background-color: var(--button-background-color--default);
  --button-background-color-hover: var(
    --button-background-color-hover--default
  );
  --button-background-color-disabled: var(
    --button-background-color-disabled--default
  );
  --button-border-and-text-color: var(--button-border-and-text-color--default);
  --button-border-and-text-color-disabled: var(
    --button-border-and-text-color-disabled--default
  );

  --button-background-color--default: #ffeba9;
  --button-background-color-hover--default: #ffde65;
  --button-background-color-disabled--default: #dddddd;
  --button-border-and-text-color--default: #000000;
  --button-border-and-text-color-disabled--default: #444444;

  --button-background-color-disabled--settings: #c7e6f1;

  --button-background-color--sync: #c7f1cb;
  --button-background-color-hover--sync: #87ee91;
  --button-background-color--danger: #f1cbc7;
  --button-background-color-hover--danger: #ee9187;

  --icon-button-text-color: #000000;
  --icon-button-background-color-hover: #e0e0e0;
  --button-image-brightness-hover: 90%;

  --option-border-and-check-color: #000000;
  --option-background-color-hover: #eeeeee;
  --option-background-color-checked: #ddf0f6;
  --option-background-color-checked-hover: #c7e6f1;

  --button-scale-factor: 1;
  --layout-scale-factor: 1;

  --card-header-height: 50px;
  --base-card-width: 294px;
  --base-card-height: 418px;
  --card-width: calc(var(--base-card-width) * var(--layout-scale-factor));
  --card-height: calc(var(--base-card-height) * var(--layout-scale-factor));
  --slot-height-portrait: calc(var(--card-header-height) + var(--card-height));
  --slot-height-landscape: calc(var(--card-header-height) + var(--card-width));
  --slot-height-giant: calc(var(--card-header-height) + 2 * var(--card-width));

  --option-inset: 30px;

  --flip-duration: 1000ms;
  --card-change-delay: 360ms;
  --card-change-duration: calc(var(--flip-duration) - var(--card-change-delay));
  --unfold-duration: 600ms;

  --portrait-cards-in-section: 0;
  --landscape-cards-in-section: 0;
  --giant-cards-in-section: 0;
}

body {
  margin: 0;
  padding: 0;
  overflow-y: scroll;
}

button {
  font-family: inherit;
}

button:not(:disabled) {
  cursor: pointer;
}

img[src=""] {
  display: none;
}

.container {
  position: relative;
  margin: auto;
  padding: var(--container-padding);
  max-width: var(--container-max-width);
}

body.init * {
  transition: none !important;
}

body.init .container {
  visibility: hidden;
}

img#logo {
  position: absolute;
  height: 80px;
}

h1,
h2,
h3,
h4 {
  margin: 0;
  text-align: center;
}

h2 {
  margin: 1rem 0;
}

h2:not(:first-of-type) {
  margin: 1.5rem 0 1rem 0;
}

.button {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  outline: none;
  border: 3px solid var(--button-border-and-text-color);
  border-radius: calc(10px * var(--button-scale-factor)) 0;
  background-color: var(--button-background-color);
  width: calc(150px * var(--button-scale-factor));
  height: calc(50px * var(--button-scale-factor));
  color: var(--button-border-and-text-color);
  font-size: calc(1rem * var(--button-scale-factor));
}

.button span {
  width: min-content;
}

.button img {
  margin-bottom: 0.1em;
  margin-left: 0.5em;
  height: 1.2em;
}

.button:active {
  background-color: var(--button-background-color-hover);
}

.button:disabled {
  border-color: var(--button-border-and-text-color-disabled);
  background-color: var(--button-background-color-disabled);
  color: var(--button-border-and-text-color-disabled);
}

@media (hover: hover) {
  .button:hover {
    background-color: var(--button-background-color-hover);
  }

  .button:hover:disabled {
    background-color: var(--button-background-color-disabled);
  }
}

.button.shuffle#shuffle-all {
  --button-scale-factor: 1.2;
  margin: 0.5rem auto 1.2rem;
}

body.show-settings .button.shuffle:disabled {
  --button-background-color-disabled: var(
    --button-background-color-disabled--settings
  );
  --button-border-and-text-color-disabled: var(
    --button-border-and-text-color--default
  );
}

.container > .container-block {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.icon-button {
  display: flex;
  position: absolute;
  top: calc(var(--container-padding) / 2);
  right: var(--container-padding);
  flex-direction: column;
  align-items: center;
  border: none;
  border-radius: 10px;
  background: none;
  padding: 10px 0;
  width: 70px;
  color: var(--icon-button-text-color);
  font-size: 0.7rem;
}

.icon-button img {
  width: 50px;
  height: 50px;
}

.icon-button:active {
  background-color: var(--icon-button-background-color-hover);
}

.icon-button:active img {
  filter: brightness(var(--button-image-brightness-hover));
}

@media (hover: hover) {
  .icon-button:hover img {
    filter: brightness(var(--button-image-brightness-hover));
  }
}

.icon-button:disabled {
  opacity: 0.6;
}

body.show-settings #settings {
  position: fixed;
  z-index: 1;
  margin-right: max(
    0px,
    calc((100% - var(--container-max-width)) / 2 - var(--container-padding))
  );
}

body:not(.show-settings) .settings-show {
  display: none !important;
}

body.show-settings .settings-hide {
  display: none !important;
}

form.settings-container {
  max-width: 400px;
}

label.subsetting {
  margin-left: var(--option-inset);
}

#select-difficulties {
  margin-top: 1rem;
}

#select-difficulties .options-hint {
  margin-bottom: 0.5rem;
}

#select-difficulties > div {
  display: flex;
  gap: 1rem;
}

body:not(.shuffle-difficulties) label[for="setting--always-include-expert"],
body:not(.shuffle-difficulties) label[for="setting--randomise-heroic-level"],
body:not(.show-tracker) label[for="setting--avoid-completed"],
body:not(.shuffle-difficulties):not(.show-tracker) #select-difficulties,
body:not(.shuffle-difficulties) #setting--max-heroic-level,
body:not(.randomise-heroic-level) #setting--max-heroic-level,
body:not(.include-additional-modulars) #customisation p,
body:not(.include-additional-modulars) #customisation fieldset {
  display: none;
}

body:not(.has-user-id) .show-if-has-user-id,
body.has-user-id .hide-if-has-user-id {
  display: none !important;
}

.sync-button {
  --button-background-color: var(--button-background-color--sync);
  --button-background-color-hover: var(--button-background-color-hover--sync);
  width: 320px;
}

button.danger {
  --button-background-color: var(--button-background-color--danger);
  --button-background-color-hover: var(--button-background-color-hover--danger);
}

.divider {
  margin: 0.5rem 0;
  text-align: center;
}

.hint {
  margin-right: auto;
  margin-left: auto;
  max-width: 320px;
  font-style: italic;
  font-size: 0.8rem;
  text-align: center;
}

#bookmark-url {
  margin-top: 1rem;
  font-weight: bold;
  font-family: "Courier New", Courier, monospace;
  text-align: center;
  text-transform: none;
}

.sections,
.heroes-and-aspects {
  display: grid;
  gap: 0 calc(20px * var(--layout-scale-factor));
}

.sections {
  grid-template-columns: auto auto auto auto;
  justify-content: center;
}

.scenario-and-difficulty,
.modulars-and-extra-modulars {
  display: flex;
  flex-direction: column;
}

.heroes-and-aspects {
  grid-template-columns: auto auto;
  grid-auto-rows: max-content;
  grid-column: span 2;
}

.section {
  position: relative;
  margin: 0.75rem 0;
}

.section.scenario,
.section.hero {
  /* Non-zero z-index for giant card fold out. */
  z-index: 1;
}

.section.hidden {
  display: none;
}

fieldset {
  margin: 0.5rem 0;
  border: none;
  padding: 0;
}

fieldset legend {
  margin-bottom: 0.5rem;
}

fieldset legend::after {
  content: ":";
}

.radio-setting {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.radio-setting input {
  position: absolute;
  opacity: 0;
  z-index: -1;
  width: 0;
  height: 0;
}

.radio-setting label {
  display: inline-flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  box-sizing: border-box;
  margin-bottom: 0.25rem;
  border: 1px solid var(--option-border-and-check-color);
  border-radius: 0.5rem;
  padding: 0.3rem 0.5rem;
}

.radio-setting label span {
  font-size: 0.65rem;
}

.radio-setting input:checked + label {
  border-width: 2px;
  background-color: var(--option-background-color-checked);
  font-weight: bold;
}

.keyboard-nav .radio-setting input:focus + label {
  outline: var(--outline);
  outline-offset: var(--outline-offset);
}

.numerical-setting legend {
  float: left;
  margin: 0;
}

.numerical-setting label {
  border-radius: 50%;
  width: 2rem;
  height: 2rem;
}

@media (hover: hover) {
  .radio-setting label:hover {
    background-color: var(--option-background-color-hover);
  }
  .radio-setting input:checked + label:hover {
    background-color: var(--option-background-color-checked-hover);
  }
}

.options {
  --options-padding: 0.5rem;
  margin: 1rem auto 0;
  padding: 0 var(--options-padding);
  width: calc(var(--card-width) - 2 * var(--options-padding));
}

.option {
  display: flex;
  position: relative;
  align-items: center;
  cursor: pointer;
  margin: 0.5rem 0;
}

.options-hint {
  margin: 1rem 0;
  font-style: italic;
  font-size: 0.8rem;
  text-align: center;
}

.option.all {
  font-weight: bold;
}

.option.set {
  font-style: italic;
}

.option.set-member {
  margin-left: var(--option-inset);
}

.option input {
  position: absolute;
  opacity: 0;
  z-index: -1;
  cursor: pointer;
  width: 0;
  height: 0;
}

.option .subname {
  font-size: 0.7rem;
}

.checkmark {
  position: relative;
  flex: none;
  box-sizing: border-box;
  margin-right: 8px;
  border: 2px solid var(--option-border-and-check-color);
  width: 20px;
  height: 20px;
}

input:indeterminate + .checkmark,
input:checked + .checkmark {
  --option-background-color-hover: var(--option-background-color-checked-hover);
  background-color: var(--option-background-color-checked);
}

input:indeterminate + .checkmark:after {
  display: block;
  width: 100%;
  content: "-";
  font-style: normal;
  font-weight: normal;
  text-align: center;
}

input:checked + .checkmark:after {
  display: block;
  position: absolute;
  left: 5px;
  transform: rotate(40deg);
  border: solid var(--option-border-and-check-color);
  border-width: 0 2px 2px 0;
  width: 5px;
  height: 10px;
  content: "";
}

.keyboard-nav input:focus + .checkmark {
  outline: var(--outline);
  outline-offset: var(--outline-offset);
}

input:active + .checkmark {
  background-color: var(--option-background-color-hover);
}

@media (hover: hover) {
  label:hover input + .checkmark {
    background-color: var(--option-background-color-hover);
  }
}

.slots {
  transition: perspective var(--card-change-duration);
}

.flipping .slots {
  perspective: calc(
    2 *
      (
        (var(--portrait-cards-in-section) * var(--slot-height-portrait)) +
          (var(--landscape-cards-in-section) * var(--slot-height-landscape)) +
          (var(--giant-cards-in-section) * var(--slot-height-giant))
      )
  );
}

.section.giant .slots {
  --portrait-cards-in-section: 0;
  --landscape-cards-in-section: 0;
  --giant-cards-in-section: 1;
}

.slot {
  position: relative;
  transform-style: preserve-3d;
  opacity: 1;
  margin: auto;
  width: var(--card-width);
  height: var(--slot-height-portrait);
}

.slot.landscape:not(.hidden) {
  width: var(--card-height);
  height: var(--slot-height-landscape);
}

.section.giant .slot {
  width: var(--card-height);
  height: var(--slot-height-giant);
}

.section.wide .slot {
  width: calc(2 * var(--card-width));
}

.flipping .slot {
  transform: rotateY(720deg);
}

.slot {
  transition:
    transform var(--flip-duration),
    width var(--card-change-duration),
    height var(--card-change-duration),
    opacity var(--card-change-duration);
}

.flipped .slot {
  transition: none;
}

.slot.hidden {
  opacity: 0;
  height: 0;
  overflow: hidden;
}

.header {
  display: flex;
  flex-direction: column;
  justify-content: center;
  box-sizing: border-box;
  padding-top: 0.25rem;
  height: var(--card-header-height);
}

.header h4.name {
  margin: 0;
  padding: 0 0.5rem;
  font-weight: normal;
  font-size: 1.2rem;
  text-align: center;
}

.slot.is-required .header h4.name {
  font-size: 1rem;
}

.header .subname,
.header .required {
  font-size: 0.7rem;
  text-align: center;
}

.slot:not(.is-required) .header .required {
  display: none;
}

.card {
  transform-origin: calc(var(--card-height) / 2) calc(var(--card-height) / 2);
  transform-style: preserve-3d;
  width: var(--card-width);
  height: var(--card-height);
}

.slot.has-giant-form,
.slot.has-wide-form {
  cursor: zoom-in;
}

.section.giant .slot,
.section.wide .slot {
  cursor: zoom-out;
}

.section:not(.flipping) .slot.has-giant-form .card {
  perspective: calc(2 * var(--slot-height-giant));
}

.section:not(.flipping) .slot.has-wide-form .card {
  perspective: calc(2 * var(--slot-height-portrait));
}

.slot.landscape .card {
  transform: rotate(90deg);
}

.card {
  transition: transform var(--card-change-duration);
}

.section.giant .card {
  transform: translateZ(10px) rotate(90deg);
}

.section.wide .card {
  transform: translateZ(10px);
}

.front,
.back {
  position: absolute;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  width: 100%;
  height: 100%;
}

.card > .back {
  transform: rotateY(-180deg) translateZ(1px);
}

.back {
  transform: rotateY(-180deg);
}

.card > .front {
  transform-origin: right;
  transition: transform var(--unfold-duration);
}

.flipping .card > .front {
  transition: transform var(--card-change-delay);
}

.section.giant .card > .front,
.section.wide .card > .front {
  /* 179.99deg fixes bug on iOS when using 180deg. */
  transform: rotateY(179.99deg);
}

.next-scenario-button {
  --campaign-image-size: 50px;
  --next-scenario-button-padding: 0.25rem;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  opacity: 1;
  margin: 0.5rem auto 0 auto;
  border: none;
  border-radius: var(--next-scenario-button-padding);
  background: none;
  padding: var(--next-scenario-button-padding);
  width: var(--card-width);
  height: calc(
    var(--campaign-image-size) + 2 * var(--next-scenario-button-padding)
  );
  color: var(--button-border-and-text-color);
  font-size: 1rem;
}

.next-scenario-button img {
  border-radius: 10%;
  width: var(--campaign-image-size);
  height: var(--campaign-image-size);
}

@media (hover: hover) {
  .next-scenario-button:hover {
    font-weight: bold;
  }

  .next-scenario-button:hover img {
    filter: brightness(var(--button-image-brightness-hover));
  }
}

.heroic-level {
  --heroic-level-card-height: 3rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  height: calc(var(--card-header-height) + var(--heroic-level-card-height));
}

.heroic-level-cards {
  display: flex;
  align-items: center;
  font-size: 1.5rem;
}

.heroic-level-cards img {
  margin-left: 0.3rem;
  height: var(--heroic-level-card-height);
}

.heroic-level-cards img.hidden {
  display: none;
}

.next-scenario-button,
.heroic-level {
  transition:
    height var(--card-change-duration),
    opacity var(--card-change-delay);
}

.scenario.flipping .next-scenario-button,
.difficulty.flipping .heroic-level {
  opacity: 0;
}

body:not(.show-next-scenario-button) .next-scenario-button,
body:not(.has-next-scenario) .next-scenario-button,
body:not(.randomise-heroic-level) .heroic-level,
.hide-heroic-level .heroic-level {
  opacity: 0;
  margin: 0;
  padding: 0;
  height: 0;
}

#tracking {
  opacity: 1;
  transition: opacity calc(var(--card-change-duration) * 0.75);
  margin-top: 1rem;
}

body:not(.show-tracker) #tracking {
  display: none;
}

.shuffling #tracking {
  opacity: 0;
}

#tracking {
  position: relative;
  overflow: hidden;
}

#tracker-container {
  display: flex;
  padding: 0.25rem;
  width: 100%;
  overflow-x: auto;
  overflow-y: hidden;
}

#tracker {
  margin: auto;
}

#tracker thead > tr:first-child > th:first-child > div {
  justify-content: flex-end;
}

#tracker thead > tr:first-child > th:first-child #total-fraction {
  font-size: 1.2rem;
}

#tracker tr > th:first-child {
  position: sticky;
  left: 0;
  z-index: 1;
}

#tracker th:not(:first-child).progress.difficulty.block-end {
  position: sticky;
  left: var(--cell-width);
  z-index: 1;
}

#tracker tr > th:first-child > div {
  max-width: calc(var(--cell-width) * 2);
}

#tracker .progress.difficulty:not(:first-child):not(.block-end) div {
  padding: 0;
  width: 0;
  min-width: 0;
}

#tracker #total-fraction > span::before {
  content: "";
}

#tracker #total-fraction > span::after {
  content: "";
}

#tracker #total-percentage span,
#tracker .progress.difficulty span {
  display: none;
}

@media (max-width: 1400px) {
  :root {
    --layout-scale-factor: 0.85;
  }

  .name {
    font-size: 1.1rem;
  }
}

@media (max-width: 1200px) {
  :root {
    --layout-scale-factor: 0.7;
  }

  .name {
    font-size: 1rem;
  }
}

@media (max-width: 1000px) {
  .sections {
    grid-template-columns: auto auto;
  }
}

@media (max-width: 600px) {
  img#logo {
    display: block;
    position: relative;
    margin: 0 auto 1.2rem auto;
  }

  .radio-setting:not(.numerical-setting) label {
    padding-right: 0.25rem;
    padding-left: 0.25rem;
    font-size: 0.9rem;
  }

  .numerical-setting legend {
    float: none;
    margin-bottom: inherit;
  }

  .sections,
  .heroes-and-aspects {
    grid-template-columns: auto;
  }

  .heroes-and-aspects {
    grid-column: auto;
  }
}
